#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>


/ {
    zmk-config {
        hold-tap-ms = <150>;
        hold-tap-flavor = "tap-preferred";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp GRAVE  &kp Q             &kp W               &kp F             &kp P           &kp B                                                              &kp J            &kp L            &kp U              &kp Y                &kp EQUAL          &kp MINUS
&kp TAB    &mt LEFT_SHIFT A  &mt LEFT_CONTROL R  &mt LEFT_ALT S    &mt LEFT_GUI T  &kp G                                                              &kp M            &mt RIGHT_GUI N  &mt RIGHT_ALT E    &mt RIGHT_CONTROL I  &mt RIGHT_SHIFT O  &kp SEMICOLON
&kp LSHFT  &kp Z             &kp X               &kp C             &kp D           &kp V           &mo 1       &kp ESCAPE  &kp ESCAPE  &mo 2          &kp K            &kp H            &kp COMMA          &kp DOT              &kp SLASH          &kp SQT
                                                 &kp LEFT_CONTROL  &kp LEFT_GUI    &kp LEFT_SHIFT  &kp DELETE  &kp SPACE   &kp ENTER   &kp BACKSPACE  &kp RIGHT_SHIFT  &kp RIGHT_GUI    &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        number_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                                  &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0           &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                                   &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans        &trans         &trans        &trans                &trans                 &trans
                                       &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans        &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        function_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &kp HOME  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &kp END  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans          &trans           &trans   &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans
            >;
        };
    };
};

